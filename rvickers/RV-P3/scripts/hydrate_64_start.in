# General MUST DEFINE VARIABLES mult AND rand USING THE -v FLAG IN COMMAND LINE CALL TO LMPS
units            real
atom_style       full
dimension        3
newton           off
boundary         p p p


# Styles
pair_style       lj/charmm/coul/long 10.0 12.0
pair_modify      shift no mix arithmetic
kspace_style     pppm 1.0e-4
kspace_modify    diff ad
bond_style       harmonic
angle_style      harmonic
dihedral_style   charmm
improper_style   harmonic
special_bonds    charmm
neigh_modify exclude type 17 17

# System definition
read_data poly/equil_polymer.lmps 

pair_coeff 15 15 0.155865 3.178
pair_coeff 16 16 0.00000 0.000000
bond_coeff 17 4.50000000e+02 1.011800000e+00
angle_coeff 22 5.50000000e+01 1.08150000e+02
angle_coeff 23 5.50000000e+01 1.08150000e+02
set type 15 charge -0.84844
set type 16 charge 0.42422 
set type 4 charge -0.592935896
variable PISTON_AREA equal  (xhi-xlo)*(yhi-ylo)
dielectric 1.0
neighbor 6.0 bin
neigh_modify delay 0 every 1 check yes one 10000
timestep 2.0
run_style verlet

# Set Graphene lattice constant variable for use as pistons and backing layer
variable GRAPHENE_LATTICE_CONST equal 3.990511111

# Set lattice constant for use in packing waters into feed/permeate
lattice fcc 4.86
variable FinMD_to_FinN equal 6.94768717535204e-11
variable ANG_to_M equal 1e-10
variable ATM_to_nm2 equal 101325
variable mult1d equal ${mult}^(1/3)
variable mult2d equal ${mult}^(2/3)
# Reset all coordinates to start at 0.0 for future data analysis

change_box all x delta -$(xlo) -$(xlo) y delta -$(ylo) -$(ylo) z delta -$(zlo) -$(zlo) units box
displace_atoms all move -$(xlo) -$(ylo) -$(zlo) units box

#velocity all create 300 $(123*v_rand)
timestep 10.0
minimize         1.0e-8 1.0e-8 10000 100000
timestep 1.0
fix 1 all nvt temp 300 300 100
run 5000
unfix 1
timestep 10.0
minimize         1.0e-8 1.0e-8 10000 100000
timestep 1.0
fix 1 all nvt temp 300 300 100
run 5000
unfix 1

# UNWRAP membrane
region membranebox block  $(xlo) $(xhi)  $(ylo) $(yhi)  $(zlo) $(zhi-2.0) side out units box
region membranewater block  $(xlo) $(xhi)  $(ylo) $(yhi)  $(zlo) $(zhi) side in units box
delete_atoms region membranebox bond yes
reset_atom_ids sort yes
region membranebox delete
region membranebox block  INF INF INF INF INF INF units box
group membrane region membranebox
region membranebox delete

# Set distance to ends of new box, and number of H2O add on each side
variable z_delta equal 165
variable NUM_H20 equal 2800*${mult2d}
variable NUM_H20_ins equal v_NUM_H20
# Use slab modifier to accurately model interactions across periodic boundaries in the zdirection

change_box all z delta -${z_delta} ${z_delta} units box

#add walls to the end of the boxes just in case waters try to escape the new fixed boundaries

#Define regions within which to randomly add water molecules
region FEED block INF INF INF INF $(zlo+15) $(zlo+v_z_delta-10) units box
region PERM block INF INF INF INF $(zhi-v_z_delta+10) $(zhi-15) units box

# Add water molecules to feed and permeate regions, minimize to move overlapping molecules
molecule mol1 ../../molecules/tip3p.mol
create_atoms 0 region membranewater subset ${NUM_H20_ins} $(565*v_mult*v_rand) mol mol1 $(231*v_mult*v_rand)
create_atoms 0 region FEED mol mol1 322
create_atoms 0 region PERM mol mol1 322

lattice hcp ${GRAPHENE_LATTICE_CONST}


group FEEDWATER region FEED
group PERMWATER region PERM
group MEMWATER1 region membranewater
group WATER type 15 16
group MEMWATER intersect MEMWATER1 WATER

delete_atoms overlap 1.6 MEMWATER all mol yes 

timestep 10.0
minimize         1.0e-8 1.0e-8 10000 100000

# Add 'polysulfone' backing layer to keep membrane in place 
variable PIN_LOCATION equal $(zhi-v_z_delta-5)
region PINlayer block INF INF INF INF ${PIN_LOCATION} $(v_GRAPHENE_LATTICE_CONST+v_PIN_LOCATION) units box

group PINplane1 type 1 2
group PINplane2 region PINlayer
group PINplane intersect PINplane1 PINplane2
group PINplane1 delete
group PINplane2 delete

# Create 'graphene' pistons to constrain water molecules and simulate operation
region zwallLO block INF INF INF INF $(zlo) $((zlo)+v_GRAPHENE_LATTICE_CONST*.9) units box

create_atoms 17 region zwallLO 
group LOzwall1 type 17
group LOzwall2 region zwallLO
group LOzwall intersect LOzwall1 LOzwall2
group LOzwall1 delete
group LOzwall2 delete

region zwallHI block INF INF INF INF $((zhi)-v_GRAPHENE_LATTICE_CONST*.9) $(zhi) units box

create_atoms 17 region zwallHI
group HIzwall1 type 17
group HIzwall2 region zwallHI
group HIzwall intersect HIzwall1 HIzwall2
group HIzwall1 delete
group HIzwall2 delete

group WALLS union LOzwall HIzwall

change_box all z delta -10 10 units box
fix tether PINplane spring/self 427.6 z
fix miniSETFORCE WALLS setforce 0 0 0
minimize         1.0e-8 1.0e-8 10000 100000
unfix miniSETFORCE
unfix tether

reset_atom_ids sort yes
write_restart hydr/restarts/restart.init
write_data test.lmps

region FEED delete
region PERM delete

region FEED block INF INF INF INF INF 0
region GAP block INF INF INF INF 0 180
region PERM block INF INF INF INF 180 INF

group SOLID subtract all WATER WALLS
group FEEDATOMS dynamic WATER region FEED every 1000
group GAPATOMS dynamic WATER region GAP every 1000
group PERMATOMS dynamic WATER region PERM every 1000
fix tether PINplane spring/self 427.6 z
variable APPL_PRESS_FEED equal ${FEEDP}*${ATM_to_nm2}/count(LOzwall)
variable APPL_PRESS_PERM equal 100*${ATM_to_nm2}/count(HIzwall)

variable pos_HYDRATE_FORCE equal ${PISTON_AREA}*${ANG_to_M}*${ANG_to_M}*${APPL_PRESS_FEED}/${FinMD_to_FinN}
variable neg_HYDRATE_FORCE equal -${PISTON_AREA}*${ANG_to_M}*${ANG_to_M}*${APPL_PRESS_PERM}/${FinMD_to_FinN}

fix FEEDFORCEset LOzwall setforce  0.0 0.0 NULL
fix PERMFORCEset HIzwall setforce  0.0 0.0 NULL

fix FEEDFORCE LOzwall aveforce  NULL NULL v_pos_HYDRATE_FORCE
fix PERMFORCE HIzwall aveforce  NULL NULL v_neg_HYDRATE_FORCE

compute        peratomstressvol all stress/atom NULL 
compute        peratomvol all voronoi/atom
compute        peratomdisplacement all displace/atom 

variable       peratompress         atom (c_peratomstressvol[1]+c_peratomstressvol[2]+c_peratomstressvol[3])
compute        totalpressure WATER reduce sum c_peratomstressvol[1] c_peratomstressvol[2] c_peratomstressvol[3]
compute        peratommass all property/atom mass
compute        totalmass WATER reduce sum c_peratommass
compute        totalvol WATER reduce sum c_peratomvol[1]

variable actualdensity equal c_totalmass*(1e8)^3/(6.022e23*c_totalvol)
variable press equal -(c_totalpressure[1]+c_totalpressure[2]+c_totalpressure[3])/(3*c_totalvol)
dump waterdata WATER custom/gz 5000 hydr/pressure/pressuredata.*.gz id mol type mass q x y z xu yu zu vx vy vz v_peratompress c_peratomvol[1] c_peratomdisplacement[1] c_peratomdisplacement[2] c_peratomdisplacement[3]
dump systemdata all custom/gz 5000 hydr/system/systemdata.*.gz id mol type mass q x y z vx vy vz v_peratompress c_peratomvol[1]
dump membranedata SOLID custom/gz 5000 hydr/membrane/membranedata.*.gz id mol type mass q x y z v_peratompress c_peratomvol[1]
dump_modify systemdata sort 2
restart 5000 hydr/restarts/restart.*


timestep 1.0
thermo 5000
fix 1water WATER nve
fix 1solid SOLID nve
fix 1walls WALLS nve 

fix FEEDTEMP FEEDATOMS temp/berendsen 300.0 300.0 200 
fix GAPTEMP GAPATOMS temp/berendsen 300.0 300.0 200 
fix PERMTEMP PERMATOMS temp/berendsen 300.0 300.0 200 
fix TEMPSOLID SOLID temp/berendsen 300.0 300.0 200 

thermo_style custom step temp press v_press v_actualdensity c_totalvol
fix FXSHAKE all shake 0.0001 20 5000 b 17 a 22 t 5

run 10000000
unfix 1